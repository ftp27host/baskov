var tmpUrl="main";$(function(){function e(e,n){a();var t=$(".next").offset().top;"down"==n?($prev=$("<div class='scene prev'>"),$prev.css("margin-top",-t),$prev.insertBefore(".scenes .current"),$(".scenes .prev").html(e),t=-t):$(".scenes .next").html(e),$(".loader").animate({opacity:0},300),$(".scenes").animate({"margin-top":-t},1e3,function(){$(".scenes .current").remove(),$(".scenes").css("margin-top",0),"down"==n?($prev.css("margin-top",0),$(".scenes .prev").removeClass("prev").addClass("current").append('<div class="loader">')):($(".scenes .next").removeClass("next").addClass("current").append('<div class="loader">'),$(".scenes").append("<div class='scene next'>")),tmpUrl=location.hash.replace("#","").split("?")[0]})}function n(n,a){a=a||"up",""==n&&(n="main"),$(".loader").show().animate({opacity:1},250),setTimeout(function(){$.ajax({url:"partials/scenes/"+n+".html",type:"GET",success:function(s){reset[n]&&reset[n](),exit[tmpUrl]?exit[tmpUrl](function(){e(s,a),t(n)}):(e(s,a),t(n))},error:function(){$(".loader").animate({opacity:0},300,function(){$(".loader").hide()})}})},200)}function t(e){$(".button").removeClass("active"),$(".button[href='#"+e+"']").addClass("active")}function a(){$(".burger, .menu").removeClass("active")}""!=location.hash&&"#main"!=location.hash&&n(location.hash.replace("#","").split("?")[0]);var s="up";$(window).on("hashchange",function(){var e=location.hash.replace("#","").split("?")[0],t=r.indexOf(tmpUrl),a=r.indexOf(e);s=a>t?"up":"down",$(".loader").addClass(s),n(e,s),s="up"});var r=$(".button").toArray().map(function(e){return $(e).attr("href").replace("#","")});$(".burger").click(function(){$(this).toggleClass("active"),$(".menu").toggleClass("active"),console.log("menu")})});var reset={},exit={};
//# sourceMappingURL=data:application/json;base64,